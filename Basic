### python basic command, functions
type()
len()
str()
float()
int()
round()
max()
reverse()
sorted()
np_2d.shape()

### Example 1
sister = 'liz' # This is a string
fam = ['mom', 1.71, 'liz', 1.73, 'dad', 1.89] #This is a list

type(fam)
List

sister.capitalize()
'Liz'

sister.replace('z','sa') # replace z with sa
'lisa'

sister.index('z') 
2

fam.index('mom')
0

fam.append('me')
['mom', 1.71, 'liz', 1.73, 'dad', 1.89, 'me']

fam.append(1.79)
['mom', 1.71, 'liz', 1.73, 'dad', 1.89, 'me', 1.79]

sister.count('s')
2

sister.upper()
'LIZ'

### NumPy Packages
pip3 install numpy
import numpy as np

numpy.array([1,2,3])
array([1,2,3])

np.array([1,2,3])
array([1,2,3])

from numpy import array

array([1,2,3])
array([1,2,3])

import math
math.pi

bmi[bmi>23]

# Create a numpy array from baseball: np_baseball
np_baseball = np.array(baseball)

np_2d[0][2]
1.71

np_ed[0, 2]
1.71

np.logical_and()
np.logical_or()
np.logical_not()


### Basic Statistics
np.mean()
np.median()
np.corrcoef() # check whether weight and height is correlated or not
np.std()
np.sum()
np.sort()


### Dictionary
# Definition of dictionary
europe = {'spain':'madrid', 'france':'paris', 'germany':'berlin', 'norway':'oslo' }

# Print out the keys in europe
print(europe.keys())

# Print out value that belongs to key 'norway'
print(europe['norway'])


# Definition of dictionary
europe = {'spain':'madrid', 'france':'paris', 'germany':'berlin', 'norway':'oslo' }

# Add italy to europe
europe['italy']='rome'

# Print out italy in europe
print('italy' in europe)

# Remove australia
del(europe['australia'])


### Comparison Operators: >, >=, <, <=, !=
### Boolean Operators: and, or, not
### Conditional Statements: if, else, elif

### for loop
# areas list
areas = [11.25, 18.0, 20.0, 10.75, 9.50]

# Change for loop to use enumerate() and update print()
for a,b in enumerate(areas) :
    print('room '+str(a)+': '+str(b))
    
### for loop in Dictionary
for k, v in my_dict.items()

### for loop in NumPy array
for i in np.nditer(my_array)

### Iterate over rows of cars
for x,y in cars.iterrows():
    print(x)
    print(y)
    
### random generators
import numpy as np
np.random.rd()
np.random.seed(123) # set the 123 seed
np.random.randint(0,2) # randomly generate 0 or 1






